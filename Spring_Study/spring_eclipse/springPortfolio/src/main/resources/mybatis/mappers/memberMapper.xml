<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<sql id="search">
		<choose>
			<when test="searchGubun == 'id_name'">
				AND (id LIKE '%' || #{searchData} || '%' OR name LIKE '%' || #{searchData} || '%')
			</when>
			<when test="searchGubun != null and searchGubun != '' and searchData != null and searchData != ''">
				AND ${searchGubun} LIKE '%' || #{searchData} || '%'
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
	</sql>

	<select id="getSelectAll" resultType="com.cbc.springPortfolio.member.model.dto.MemberDTO">
		SELECT *
		  FROM (SELECT rownum rnum, basic.*
			  	  FROM (SELECT * 
						  FROM member 
						 WHERE 1 = 1
				 		<include refid="search"></include>
				  	  ORDER BY no DESC
				  	   ) basic
			   )
		 WHERE rnum BETWEEN #{startRecord} AND #{lastRecord}
	</select>
	
	<select id="getSelectOne" resultType="com.cbc.springPortfolio.member.model.dto.MemberDTO">
		SELECT *
		  FROM (SELECT m.*,
			   		   LAG(no) OVER (ORDER BY no DESC) preNo,
			   		   LAG(name) OVER (ORDER BY no DESC) preName,
			   		   LEAD(no) OVER (ORDER BY no DESC) nxtNo,
			   		   LEAD(name) OVER (ORDER BY no DESC) nxtName
		  		  FROM member m
		 		 WHERE 1=1
	  	 		 <include refid="search"></include>
	  		  ORDER BY no DESC
	  		   )
	  	 WHERE no = #{no}
	</select>
	
	<select id="getIdCheck" resultType="int">
		SELECT COUNT(*)
		  FROM member
		 WHERE id = #{id}
	</select>
	
	<select id="getTotalRecord" resultType="int">
		SELECT COUNT(*)
		  FROM member
		 WHERE 1 = 1
		 <include refid="search"></include>
	</select>
	
	<insert id="setInsert"> <!-- parameterType="" 생략가능 -->
		INSERT INTO member
			 VALUES (seq_member.NEXTVAL, #{id}, #{passwd}, #{name}, #{jumin1}, #{jumin2}, #{phone1}, #{phone2}, #{phone3}, #{email1}, #{email2}, #{postcode}, #{address}, #{detailAddress}, #{extraAddress}, SYSDATE)
	</insert>
	
	<update id="setUpdate">
		UPDATE member
		   SET phone1 = #{phone1}, phone2 = #{phone2}, phone3 = #{phone3}, email1 = #{email1}, email2 = #{email2}, postcode = #{postcode}, address = #{address}, detailAddress = #{detailAddress}, extraAddress = #{extraAddress}
		 WHERE no = #{no} AND passwd = #{passwd}
	</update>
	
	<delete id="setDelete">
		DELETE FROM member
		 	  WHERE no = #{no} AND passwd = #{passwd}
	</delete>
	
</mapper>